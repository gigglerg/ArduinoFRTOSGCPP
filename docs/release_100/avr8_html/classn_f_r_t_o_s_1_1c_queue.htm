<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArduinoFRTOSGCPP: nFRTOS::cQueue&lt; QType &gt; Class Template Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(function() { init_search(); });
/* @license-end */
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="doxygenstyle.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">ArduinoFRTOSGCPP
   &#160;<span id="projectnumber">d91a63f (git)</span>
   </div>
   <div id="projectbrief">Library for accessing flash with ware levelling, supporting Arduino and OpenSTM32 (GPL).</div>
  </td>
   <td>        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
</td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classn_f_r_t_o_s_1_1c_queue.htm',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a> &#124;
<a href="classn_f_r_t_o_s_1_1c_queue-members.htm">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">nFRTOS::cQueue&lt; QType &gt; Class Template Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>A class wrapping a single queue.  
 <a href="classn_f_r_t_o_s_1_1c_queue.htm#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="frtos_8h_source.htm">frtos.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a6b3363e59e08d06e55302cce9f02f062"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classn_f_r_t_o_s_1_1c_queue.htm#a6b3363e59e08d06e55302cce9f02f062">cQueue</a> (UBaseType_t uxQueueLength)</td></tr>
<tr class="memdesc:a6b3363e59e08d06e55302cce9f02f062"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default constructor.  <a href="classn_f_r_t_o_s_1_1c_queue.htm#a6b3363e59e08d06e55302cce9f02f062">More...</a><br /></td></tr>
<tr class="separator:a6b3363e59e08d06e55302cce9f02f062"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3b6e5eaaee998f5880b18c5651765dc0"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classn_f_r_t_o_s_1_1c_queue.htm#a3b6e5eaaee998f5880b18c5651765dc0">~cQueue</a> ()</td></tr>
<tr class="memdesc:a3b6e5eaaee998f5880b18c5651765dc0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructor.  <a href="classn_f_r_t_o_s_1_1c_queue.htm#a3b6e5eaaee998f5880b18c5651765dc0">More...</a><br /></td></tr>
<tr class="separator:a3b6e5eaaee998f5880b18c5651765dc0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab758da8c532339b78c97b77c5c68545e"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classn_f_r_t_o_s_1_1c_queue.htm#ab758da8c532339b78c97b77c5c68545e">create</a> ()</td></tr>
<tr class="memdesc:ab758da8c532339b78c97b77c5c68545e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create FRTOS queue and test handle, <a class="el" href="classn_f_r_t_o_s_1_1c_queue.htm#a51ffc00753062126a6bc81894956e4e7">isValidHandle</a>.  <a href="classn_f_r_t_o_s_1_1c_queue.htm#ab758da8c532339b78c97b77c5c68545e">More...</a><br /></td></tr>
<tr class="separator:ab758da8c532339b78c97b77c5c68545e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7ad9fc9b5a0c2ca6fa41e847bc122da3"><td class="memItemLeft" align="right" valign="top">QueueHandle_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classn_f_r_t_o_s_1_1c_queue.htm#a7ad9fc9b5a0c2ca6fa41e847bc122da3">getHandle</a> () const</td></tr>
<tr class="memdesc:a7ad9fc9b5a0c2ca6fa41e847bc122da3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get FRTOS queue handle or NULL.  <a href="classn_f_r_t_o_s_1_1c_queue.htm#a7ad9fc9b5a0c2ca6fa41e847bc122da3">More...</a><br /></td></tr>
<tr class="separator:a7ad9fc9b5a0c2ca6fa41e847bc122da3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a51ffc00753062126a6bc81894956e4e7"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classn_f_r_t_o_s_1_1c_queue.htm#a51ffc00753062126a6bc81894956e4e7">isValidHandle</a> () const</td></tr>
<tr class="memdesc:a51ffc00753062126a6bc81894956e4e7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Test FRTOS queue handle.  <a href="classn_f_r_t_o_s_1_1c_queue.htm#a51ffc00753062126a6bc81894956e4e7">More...</a><br /></td></tr>
<tr class="separator:a51ffc00753062126a6bc81894956e4e7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1a08efb3a6704cd339cd90995cfc6911"><td class="memItemLeft" align="right" valign="top">UBaseType_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classn_f_r_t_o_s_1_1c_queue.htm#a1a08efb3a6704cd339cd90995cfc6911">getSize</a> () const</td></tr>
<tr class="memdesc:a1a08efb3a6704cd339cd90995cfc6911"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get size of data structure carried by queue.  <a href="classn_f_r_t_o_s_1_1c_queue.htm#a1a08efb3a6704cd339cd90995cfc6911">More...</a><br /></td></tr>
<tr class="separator:a1a08efb3a6704cd339cd90995cfc6911"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a718c46b08cdf0d18eefeb40cfe6a3f26"><td class="memItemLeft" align="right" valign="top">UBaseType_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classn_f_r_t_o_s_1_1c_queue.htm#a718c46b08cdf0d18eefeb40cfe6a3f26">getSpacesAvailable</a> () const</td></tr>
<tr class="memdesc:a718c46b08cdf0d18eefeb40cfe6a3f26"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get queue spaces available for send (free space in QType unit counts)  <a href="classn_f_r_t_o_s_1_1c_queue.htm#a718c46b08cdf0d18eefeb40cfe6a3f26">More...</a><br /></td></tr>
<tr class="separator:a718c46b08cdf0d18eefeb40cfe6a3f26"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af234ee34b56795a1dc4987e56f2a0ed6"><td class="memItemLeft" align="right" valign="top">QType&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classn_f_r_t_o_s_1_1c_queue.htm#af234ee34b56795a1dc4987e56f2a0ed6">peek</a> (bool &amp;bReceived, const TickType_t xTicksToWait=portMAX_DELAY) const</td></tr>
<tr class="memdesc:af234ee34b56795a1dc4987e56f2a0ed6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Peek at data on queue.  <a href="classn_f_r_t_o_s_1_1c_queue.htm#af234ee34b56795a1dc4987e56f2a0ed6">More...</a><br /></td></tr>
<tr class="separator:af234ee34b56795a1dc4987e56f2a0ed6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa6fb54ccad391d70454fd8ca12991a30"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classn_f_r_t_o_s_1_1c_queue.htm#aa6fb54ccad391d70454fd8ca12991a30">receive</a> (QType &amp;xData, const TickType_t xTicksToWait=portMAX_DELAY) const</td></tr>
<tr class="memdesc:aa6fb54ccad391d70454fd8ca12991a30"><td class="mdescLeft">&#160;</td><td class="mdescRight">Receive data from queue.  <a href="classn_f_r_t_o_s_1_1c_queue.htm#aa6fb54ccad391d70454fd8ca12991a30">More...</a><br /></td></tr>
<tr class="separator:aa6fb54ccad391d70454fd8ca12991a30"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a198cfa8c045358a9d5854ca7a468d4c3"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classn_f_r_t_o_s_1_1c_queue.htm#a198cfa8c045358a9d5854ca7a468d4c3">send</a> (const QType &amp;xData, const TickType_t xTicksToWait=portMAX_DELAY) const</td></tr>
<tr class="memdesc:a198cfa8c045358a9d5854ca7a468d4c3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Send xData to queue.  <a href="classn_f_r_t_o_s_1_1c_queue.htm#a198cfa8c045358a9d5854ca7a468d4c3">More...</a><br /></td></tr>
<tr class="separator:a198cfa8c045358a9d5854ca7a468d4c3"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:ad8d74fb418ac14c37ece8aa82a1f917f"><td class="memItemLeft" align="right" valign="top"><a id="ad8d74fb418ac14c37ece8aa82a1f917f"></a>
UBaseType_t&#160;</td><td class="memItemRight" valign="bottom"><b>_xSize</b></td></tr>
<tr class="separator:ad8d74fb418ac14c37ece8aa82a1f917f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a878f5db1fa3b8fb37391c0cbabc89b29"><td class="memItemLeft" align="right" valign="top"><a id="a878f5db1fa3b8fb37391c0cbabc89b29"></a>
QueueHandle_t&#160;</td><td class="memItemRight" valign="bottom"><b>_xQHandle</b></td></tr>
<tr class="separator:a878f5db1fa3b8fb37391c0cbabc89b29"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><h3>template&lt;class QType&gt;<br />
class nFRTOS::cQueue&lt; QType &gt;</h3>

<p>A class wrapping a single queue. </p>
<dl class="tparams"><dt>Template Parameters</dt><dd>
  <table class="tparams">
    <tr><td class="paramname">QType</td><td>Data type stored in queue </td></tr>
  </table>
  </dd>
</dl>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a6b3363e59e08d06e55302cce9f02f062"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6b3363e59e08d06e55302cce9f02f062">&#9670;&nbsp;</a></span>cQueue()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class QType &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classn_f_r_t_o_s_1_1c_queue.htm">nFRTOS::cQueue</a>&lt; QType &gt;::<a class="el" href="classn_f_r_t_o_s_1_1c_queue.htm">cQueue</a> </td>
          <td>(</td>
          <td class="paramtype">UBaseType_t&#160;</td>
          <td class="paramname"><em>uxQueueLength</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Default constructor. </p>
<p>Make stable instance</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">uxQueueLength</td><td>Size of queue (elements) </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a3b6e5eaaee998f5880b18c5651765dc0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3b6e5eaaee998f5880b18c5651765dc0">&#9670;&nbsp;</a></span>~cQueue()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class QType &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classn_f_r_t_o_s_1_1c_queue.htm">nFRTOS::cQueue</a>&lt; QType &gt;::~<a class="el" href="classn_f_r_t_o_s_1_1c_queue.htm">cQueue</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Destructor. </p>
<p>Release queue </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="ab758da8c532339b78c97b77c5c68545e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab758da8c532339b78c97b77c5c68545e">&#9670;&nbsp;</a></span>create()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class QType &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="classn_f_r_t_o_s_1_1c_queue.htm">nFRTOS::cQueue</a>&lt; QType &gt;::create </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Create FRTOS queue and test handle, <a class="el" href="classn_f_r_t_o_s_1_1c_queue.htm#a51ffc00753062126a6bc81894956e4e7">isValidHandle</a>. </p>
<dl class="section return"><dt>Returns</dt><dd>Creation state </dd></dl>

</div>
</div>
<a id="a7ad9fc9b5a0c2ca6fa41e847bc122da3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7ad9fc9b5a0c2ca6fa41e847bc122da3">&#9670;&nbsp;</a></span>getHandle()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class QType &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">QueueHandle_t <a class="el" href="classn_f_r_t_o_s_1_1c_queue.htm">nFRTOS::cQueue</a>&lt; QType &gt;::getHandle </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get FRTOS queue handle or NULL. </p>
<dl class="section return"><dt>Returns</dt><dd>Queue handle </dd></dl>

</div>
</div>
<a id="a1a08efb3a6704cd339cd90995cfc6911"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1a08efb3a6704cd339cd90995cfc6911">&#9670;&nbsp;</a></span>getSize()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class QType &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">UBaseType_t <a class="el" href="classn_f_r_t_o_s_1_1c_queue.htm">nFRTOS::cQueue</a>&lt; QType &gt;::getSize </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get size of data structure carried by queue. </p>
<dl class="section return"><dt>Returns</dt><dd>Size (Bytes) </dd></dl>

</div>
</div>
<a id="a718c46b08cdf0d18eefeb40cfe6a3f26"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a718c46b08cdf0d18eefeb40cfe6a3f26">&#9670;&nbsp;</a></span>getSpacesAvailable()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class QType &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">UBaseType_t <a class="el" href="classn_f_r_t_o_s_1_1c_queue.htm">nFRTOS::cQueue</a>&lt; QType &gt;::getSpacesAvailable </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get queue spaces available for send (free space in QType unit counts) </p>
<dl class="section return"><dt>Returns</dt><dd>Spaces available (elements free) </dd></dl>

</div>
</div>
<a id="a51ffc00753062126a6bc81894956e4e7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a51ffc00753062126a6bc81894956e4e7">&#9670;&nbsp;</a></span>isValidHandle()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class QType &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="classn_f_r_t_o_s_1_1c_queue.htm">nFRTOS::cQueue</a>&lt; QType &gt;::isValidHandle </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Test FRTOS queue handle. </p>
<dl class="section return"><dt>Returns</dt><dd>Handle valid state </dd></dl>

</div>
</div>
<a id="af234ee34b56795a1dc4987e56f2a0ed6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af234ee34b56795a1dc4987e56f2a0ed6">&#9670;&nbsp;</a></span>peek()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class QType &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">QType <a class="el" href="classn_f_r_t_o_s_1_1c_queue.htm">nFRTOS::cQueue</a>&lt; QType &gt;::peek </td>
          <td>(</td>
          <td class="paramtype">bool &amp;&#160;</td>
          <td class="paramname"><em>bReceived</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const TickType_t&#160;</td>
          <td class="paramname"><em>xTicksToWait</em> = <code>portMAX_DELAY</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Peek at data on queue. </p>
<p>If xTicksToWait expires and no data received bReceived will be false</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">bReceived</td><td>Valid element receive status. If true then returned element can be used </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">xTicksToWait</td><td>Ticks to wait. Default portMAX_DELAY (unlimited) </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Element </dd></dl>

</div>
</div>
<a id="aa6fb54ccad391d70454fd8ca12991a30"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa6fb54ccad391d70454fd8ca12991a30">&#9670;&nbsp;</a></span>receive()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class QType &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="classn_f_r_t_o_s_1_1c_queue.htm">nFRTOS::cQueue</a>&lt; QType &gt;::receive </td>
          <td>(</td>
          <td class="paramtype">QType &amp;&#160;</td>
          <td class="paramname"><em>xData</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const TickType_t&#160;</td>
          <td class="paramname"><em>xTicksToWait</em> = <code>portMAX_DELAY</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Receive data from queue. </p>
<p>If xTicksToWait expires and no data received bReceived will be false</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">xData</td><td>Reference to element received. If returned state true then this is valid </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">xTicksToWait</td><td>Ticks to wait. Default portMAX_DELAY (unlimited) </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Receive status </dd></dl>

</div>
</div>
<a id="a198cfa8c045358a9d5854ca7a468d4c3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a198cfa8c045358a9d5854ca7a468d4c3">&#9670;&nbsp;</a></span>send()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class QType &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="classn_f_r_t_o_s_1_1c_queue.htm">nFRTOS::cQueue</a>&lt; QType &gt;::send </td>
          <td>(</td>
          <td class="paramtype">const QType &amp;&#160;</td>
          <td class="paramname"><em>xData</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const TickType_t&#160;</td>
          <td class="paramname"><em>xTicksToWait</em> = <code>portMAX_DELAY</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Send xData to queue. </p>
<p>If xTicksToWait expires and no data sent due to block, result will be false</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">xData</td><td>Reference to element to send </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">xTicksToWait</td><td>Ticks to wait. Default portMAX_DELAY (unlimited) </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Send status </dd></dl>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><b>nFRTOS</b></li><li class="navelem"><a class="el" href="classn_f_r_t_o_s_1_1c_queue.htm">cQueue</a></li>
    <li class="footer">Generated on Mon Jan 1 2024 17:03:14 for ArduinoFRTOSGCPP by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
