<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArduinoFRTOSGCPP: nFRTOSPeripheral::cUARTTX&lt; N &gt; Class Template Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(function() { init_search(); });
/* @license-end */
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="doxygenstyle.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">ArduinoFRTOSGCPP
   &#160;<span id="projectnumber">d91a63f (git)</span>
   </div>
   <div id="projectbrief">Library for accessing flash with ware levelling, supporting Arduino and OpenSTM32 (GPL).</div>
  </td>
   <td>        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
</td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classn_f_r_t_o_s_peripheral_1_1c_u_a_r_t_t_x.htm',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a> &#124;
<a href="classn_f_r_t_o_s_peripheral_1_1c_u_a_r_t_t_x-members.htm">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">nFRTOSPeripheral::cUARTTX&lt; N &gt; Class Template Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>A wrapper class for an Arduino hardware UART TX operation that is FRTOS task friendly using queues.  
 <a href="classn_f_r_t_o_s_peripheral_1_1c_u_a_r_t_t_x.htm#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="frtos__peripheral_8h_source.htm">frtos_peripheral.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a9a166940df1e5efffe3b413610d64ff9"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classn_f_r_t_o_s_peripheral_1_1c_u_a_r_t_t_x.htm#a9a166940df1e5efffe3b413610d64ff9">cUARTTX</a> (HardwareSerial &amp;xSerial, const uint8_t ucQueueSize)</td></tr>
<tr class="memdesc:a9a166940df1e5efffe3b413610d64ff9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="classn_f_r_t_o_s_peripheral_1_1c_u_a_r_t_t_x.htm#a9a166940df1e5efffe3b413610d64ff9">More...</a><br /></td></tr>
<tr class="separator:a9a166940df1e5efffe3b413610d64ff9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9cff5b85dac838e8fea24572118863c6"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classn_f_r_t_o_s_peripheral_1_1c_u_a_r_t_t_x.htm#a9cff5b85dac838e8fea24572118863c6">transmit</a> (<a class="el" href="classn_text_1_1c_text_line.htm">nText::cTextLine</a>&lt; N &gt; &amp;xTextLine)</td></tr>
<tr class="memdesc:a9cff5b85dac838e8fea24572118863c6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Transmit given cTextLine over UART, FRTOS task safe, posts on TX queue.  <a href="classn_f_r_t_o_s_peripheral_1_1c_u_a_r_t_t_x.htm#a9cff5b85dac838e8fea24572118863c6">More...</a><br /></td></tr>
<tr class="separator:a9cff5b85dac838e8fea24572118863c6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae732fb1a9adc3e9db48fb1869823f348"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classn_f_r_t_o_s_peripheral_1_1c_u_a_r_t_t_x.htm#ae732fb1a9adc3e9db48fb1869823f348">transmit</a> (const char *pscTextLine)</td></tr>
<tr class="memdesc:ae732fb1a9adc3e9db48fb1869823f348"><td class="mdescLeft">&#160;</td><td class="mdescRight">Transmit given character string over UART, FRTOS task safe, posts on TX queue.  <a href="classn_f_r_t_o_s_peripheral_1_1c_u_a_r_t_t_x.htm#ae732fb1a9adc3e9db48fb1869823f348">More...</a><br /></td></tr>
<tr class="separator:ae732fb1a9adc3e9db48fb1869823f348"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a853961564553667080d4ad7cd82b5707"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classn_f_r_t_o_s_peripheral_1_1c_u_a_r_t_t_x.htm#a853961564553667080d4ad7cd82b5707">transmit</a> (const char *pscTextLine, const uint8_t ucLength)</td></tr>
<tr class="memdesc:a853961564553667080d4ad7cd82b5707"><td class="mdescLeft">&#160;</td><td class="mdescRight">Transmit given fixed length character string over UART, FRTOS task safe, posts on TX queue.  <a href="classn_f_r_t_o_s_peripheral_1_1c_u_a_r_t_t_x.htm#a853961564553667080d4ad7cd82b5707">More...</a><br /></td></tr>
<tr class="separator:a853961564553667080d4ad7cd82b5707"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adf139a67992602e9c4ebe8411312b5b0"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classn_f_r_t_o_s_peripheral_1_1c_u_a_r_t_t_x.htm#adf139a67992602e9c4ebe8411312b5b0">join</a> (const UBaseType_t priority=tskIDLE_PRIORITY+1, const uint32_t stackSize=configMINIMAL_STACK_SIZE *4)</td></tr>
<tr class="memdesc:adf139a67992602e9c4ebe8411312b5b0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create task and start it + create queue.  <a href="classn_f_r_t_o_s_peripheral_1_1c_u_a_r_t_t_x.htm#adf139a67992602e9c4ebe8411312b5b0">More...</a><br /></td></tr>
<tr class="separator:adf139a67992602e9c4ebe8411312b5b0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classn_f_r_t_o_s_1_1c_task"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classn_f_r_t_o_s_1_1c_task')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classn_f_r_t_o_s_1_1c_task.htm">nFRTOS::cTask</a></td></tr>
<tr class="memitem:a99bba5627bc1b7eb2fe103998a9c0e9c inherit pub_methods_classn_f_r_t_o_s_1_1c_task"><td class="memItemLeft" align="right" valign="top"><a id="a99bba5627bc1b7eb2fe103998a9c0e9c"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classn_f_r_t_o_s_1_1c_task.htm#a99bba5627bc1b7eb2fe103998a9c0e9c">cTask</a> ()</td></tr>
<tr class="memdesc:a99bba5627bc1b7eb2fe103998a9c0e9c inherit pub_methods_classn_f_r_t_o_s_1_1c_task"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default constructor, nake stable instance. <br /></td></tr>
<tr class="separator:a99bba5627bc1b7eb2fe103998a9c0e9c inherit pub_methods_classn_f_r_t_o_s_1_1c_task"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ace84938f79339c8102e736e0d1930bad inherit pub_methods_classn_f_r_t_o_s_1_1c_task"><td class="memItemLeft" align="right" valign="top">TaskHandle_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classn_f_r_t_o_s_1_1c_task.htm#ace84938f79339c8102e736e0d1930bad">getHandle</a> ()</td></tr>
<tr class="memdesc:ace84938f79339c8102e736e0d1930bad inherit pub_methods_classn_f_r_t_o_s_1_1c_task"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get FRTOS task handle or NULL.  <a href="classn_f_r_t_o_s_1_1c_task.htm#ace84938f79339c8102e736e0d1930bad">More...</a><br /></td></tr>
<tr class="separator:ace84938f79339c8102e736e0d1930bad inherit pub_methods_classn_f_r_t_o_s_1_1c_task"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4e91aca895cfbabf02d106294c8cc8ce inherit pub_methods_classn_f_r_t_o_s_1_1c_task"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classn_f_r_t_o_s_1_1c_task.htm#a4e91aca895cfbabf02d106294c8cc8ce">isValidHandle</a> () const</td></tr>
<tr class="memdesc:a4e91aca895cfbabf02d106294c8cc8ce inherit pub_methods_classn_f_r_t_o_s_1_1c_task"><td class="mdescLeft">&#160;</td><td class="mdescRight">Test FRTOS task handle.  <a href="classn_f_r_t_o_s_1_1c_task.htm#a4e91aca895cfbabf02d106294c8cc8ce">More...</a><br /></td></tr>
<tr class="separator:a4e91aca895cfbabf02d106294c8cc8ce inherit pub_methods_classn_f_r_t_o_s_1_1c_task"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a75ccedd63e259e8d3b4075d934932946 inherit pub_methods_classn_f_r_t_o_s_1_1c_task"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classn_f_r_t_o_s_1_1c_task.htm#a75ccedd63e259e8d3b4075d934932946">isRunning</a> ()</td></tr>
<tr class="memdesc:a75ccedd63e259e8d3b4075d934932946 inherit pub_methods_classn_f_r_t_o_s_1_1c_task"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get FRTOS task running state.  <a href="classn_f_r_t_o_s_1_1c_task.htm#a75ccedd63e259e8d3b4075d934932946">More...</a><br /></td></tr>
<tr class="separator:a75ccedd63e259e8d3b4075d934932946 inherit pub_methods_classn_f_r_t_o_s_1_1c_task"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6bb94892cbcb0c55842d9266eb9e22f7 inherit pub_methods_classn_f_r_t_o_s_1_1c_task"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classn_f_r_t_o_s_1_1c_task.htm#a6bb94892cbcb0c55842d9266eb9e22f7">suspend</a> (const TaskHandle_t xTHandleSpecific=NULL) const</td></tr>
<tr class="memdesc:a6bb94892cbcb0c55842d9266eb9e22f7 inherit pub_methods_classn_f_r_t_o_s_1_1c_task"><td class="mdescLeft">&#160;</td><td class="mdescRight">Suspend task.  <a href="classn_f_r_t_o_s_1_1c_task.htm#a6bb94892cbcb0c55842d9266eb9e22f7">More...</a><br /></td></tr>
<tr class="separator:a6bb94892cbcb0c55842d9266eb9e22f7 inherit pub_methods_classn_f_r_t_o_s_1_1c_task"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a026ab6cbf3517b5064e0b48dfc48b2be inherit pub_methods_classn_f_r_t_o_s_1_1c_task"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classn_f_r_t_o_s_1_1c_task.htm#a026ab6cbf3517b5064e0b48dfc48b2be">resume</a> (const TaskHandle_t xTHandleSpecific=NULL) const</td></tr>
<tr class="memdesc:a026ab6cbf3517b5064e0b48dfc48b2be inherit pub_methods_classn_f_r_t_o_s_1_1c_task"><td class="mdescLeft">&#160;</td><td class="mdescRight">Resume task.  <a href="classn_f_r_t_o_s_1_1c_task.htm#a026ab6cbf3517b5064e0b48dfc48b2be">More...</a><br /></td></tr>
<tr class="separator:a026ab6cbf3517b5064e0b48dfc48b2be inherit pub_methods_classn_f_r_t_o_s_1_1c_task"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:a10d74924e9ce23d35c49fa73f21744dd"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classn_f_r_t_o_s_peripheral_1_1c_u_a_r_t_t_x.htm#a10d74924e9ce23d35c49fa73f21744dd">run</a> ()</td></tr>
<tr class="memdesc:a10d74924e9ce23d35c49fa73f21744dd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Transmit task loop.  <a href="classn_f_r_t_o_s_peripheral_1_1c_u_a_r_t_t_x.htm#a10d74924e9ce23d35c49fa73f21744dd">More...</a><br /></td></tr>
<tr class="separator:a10d74924e9ce23d35c49fa73f21744dd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_methods_classn_f_r_t_o_s_1_1c_task"><td colspan="2" onclick="javascript:toggleInherit('pro_methods_classn_f_r_t_o_s_1_1c_task')"><img src="closed.png" alt="-"/>&#160;Protected Member Functions inherited from <a class="el" href="classn_f_r_t_o_s_1_1c_task.htm">nFRTOS::cTask</a></td></tr>
<tr class="memitem:a402ca47e8e43b64e6157a17cd81d9ff5 inherit pro_methods_classn_f_r_t_o_s_1_1c_task"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classn_f_r_t_o_s_1_1c_task.htm#a402ca47e8e43b64e6157a17cd81d9ff5">start</a> (const char *pcTaskName, const UBaseType_t ulPriority, const uint32_t ulStackSize=configMINIMAL_STACK_SIZE)</td></tr>
<tr class="memdesc:a402ca47e8e43b64e6157a17cd81d9ff5 inherit pro_methods_classn_f_r_t_o_s_1_1c_task"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create task and start running.  <a href="classn_f_r_t_o_s_1_1c_task.htm#a402ca47e8e43b64e6157a17cd81d9ff5">More...</a><br /></td></tr>
<tr class="separator:a402ca47e8e43b64e6157a17cd81d9ff5 inherit pro_methods_classn_f_r_t_o_s_1_1c_task"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:a01181450300fb1cd9aed94effedb9558"><td class="memItemLeft" align="right" valign="top"><a id="a01181450300fb1cd9aed94effedb9558"></a>
<a class="el" href="classn_f_r_t_o_s_1_1c_queue.htm">nFRTOS::cQueue</a>&lt; <a class="el" href="classn_text_1_1c_text_line.htm">nText::cTextLine</a>&lt; N &gt; &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>_xTxQueue</b></td></tr>
<tr class="separator:a01181450300fb1cd9aed94effedb9558"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a92ee904be9b137546b8fd20944da760d"><td class="memItemLeft" align="right" valign="top"><a id="a92ee904be9b137546b8fd20944da760d"></a>
HardwareSerial &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>_xSerial</b></td></tr>
<tr class="separator:a92ee904be9b137546b8fd20944da760d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_attribs_classn_f_r_t_o_s_1_1c_task"><td colspan="2" onclick="javascript:toggleInherit('pro_attribs_classn_f_r_t_o_s_1_1c_task')"><img src="closed.png" alt="-"/>&#160;Protected Attributes inherited from <a class="el" href="classn_f_r_t_o_s_1_1c_task.htm">nFRTOS::cTask</a></td></tr>
<tr class="memitem:a288064cacde495b20a32d4c29e47cfa4 inherit pro_attribs_classn_f_r_t_o_s_1_1c_task"><td class="memItemLeft" align="right" valign="top"><a id="a288064cacde495b20a32d4c29e47cfa4"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>_bRunning</b></td></tr>
<tr class="separator:a288064cacde495b20a32d4c29e47cfa4 inherit pro_attribs_classn_f_r_t_o_s_1_1c_task"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5ecdb5d8115f8a27c85850bbfa872463 inherit pro_attribs_classn_f_r_t_o_s_1_1c_task"><td class="memItemLeft" align="right" valign="top"><a id="a5ecdb5d8115f8a27c85850bbfa872463"></a>
TaskHandle_t&#160;</td><td class="memItemRight" valign="bottom"><b>_xTHandle</b></td></tr>
<tr class="separator:a5ecdb5d8115f8a27c85850bbfa872463 inherit pro_attribs_classn_f_r_t_o_s_1_1c_task"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pro_static_methods_classn_f_r_t_o_s_1_1c_task"><td colspan="2" onclick="javascript:toggleInherit('pro_static_methods_classn_f_r_t_o_s_1_1c_task')"><img src="closed.png" alt="-"/>&#160;Static Protected Member Functions inherited from <a class="el" href="classn_f_r_t_o_s_1_1c_task.htm">nFRTOS::cTask</a></td></tr>
<tr class="memitem:adc8aba53fc26c438dabb447961cdb49c inherit pro_static_methods_classn_f_r_t_o_s_1_1c_task"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classn_f_r_t_o_s_1_1c_task.htm#adc8aba53fc26c438dabb447961cdb49c">taskHandler</a> (void *pvParameters)</td></tr>
<tr class="memdesc:adc8aba53fc26c438dabb447961cdb49c inherit pro_static_methods_classn_f_r_t_o_s_1_1c_task"><td class="mdescLeft">&#160;</td><td class="mdescRight">Task callback handler, invokes user defined.  <a href="classn_f_r_t_o_s_1_1c_task.htm#adc8aba53fc26c438dabb447961cdb49c">More...</a><br /></td></tr>
<tr class="separator:adc8aba53fc26c438dabb447961cdb49c inherit pro_static_methods_classn_f_r_t_o_s_1_1c_task"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><h3>template&lt;uint16_t N&gt;<br />
class nFRTOSPeripheral::cUARTTX&lt; N &gt;</h3>

<p>A wrapper class for an Arduino hardware UART TX operation that is FRTOS task friendly using queues. </p>
<dl class="tparams"><dt>Template Parameters</dt><dd>
  <table class="tparams">
    <tr><td class="paramname">N</td><td>Text line length (characters, including NULL) </td></tr>
  </table>
  </dd>
</dl>
<dl class="section examples"><dt>Examples</dt><dd><a class="el" href="uart_8ino-example.htm#_a2">uart.ino</a>.</dd>
</dl>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a9a166940df1e5efffe3b413610d64ff9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9a166940df1e5efffe3b413610d64ff9">&#9670;&nbsp;</a></span>cUARTTX()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;uint16_t N&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classn_f_r_t_o_s_peripheral_1_1c_u_a_r_t_t_x.htm">nFRTOSPeripheral::cUARTTX</a>&lt; N &gt;::<a class="el" href="classn_f_r_t_o_s_peripheral_1_1c_u_a_r_t_t_x.htm">cUARTTX</a> </td>
          <td>(</td>
          <td class="paramtype">HardwareSerial &amp;&#160;</td>
          <td class="paramname"><em>xSerial</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint8_t&#160;</td>
          <td class="paramname"><em>ucQueueSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Constructor. </p>
<p>Make stable instance</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">xSerial</td><td>Reference to Ardiuno hardware serial port instance, used to receive data </td></tr>
    <tr><td class="paramdir"></td><td class="paramname">ucQueueSize</td><td>in cTextLine objects </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="adf139a67992602e9c4ebe8411312b5b0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adf139a67992602e9c4ebe8411312b5b0">&#9670;&nbsp;</a></span>join()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;uint16_t N&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="classn_f_r_t_o_s_peripheral_1_1c_u_a_r_t_t_x.htm">nFRTOSPeripheral::cUARTTX</a>&lt; N &gt;::join </td>
          <td>(</td>
          <td class="paramtype">const UBaseType_t&#160;</td>
          <td class="paramname"><em>priority</em> = <code>tskIDLE_PRIORITY&#160;+&#160;1</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint32_t&#160;</td>
          <td class="paramname"><em>stackSize</em> = <code>configMINIMAL_STACK_SIZE&#160;*&#160;4</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Create task and start it + create queue. </p>
<dl class="section note"><dt>Note</dt><dd>Originally setup task name as "UArtT&lt;tx pin&gt;" but no debugger for arduino code so no point </dd></dl>
<dl class="section return"><dt>Returns</dt><dd>Join and queue state </dd></dl>

<p>Implements <a class="el" href="classn_f_r_t_o_s_1_1c_task.htm#a773e388a901e20cb124e894dab28aba9">nFRTOS::cTask</a>.</p>

</div>
</div>
<a id="a10d74924e9ce23d35c49fa73f21744dd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a10d74924e9ce23d35c49fa73f21744dd">&#9670;&nbsp;</a></span>run()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;uint16_t N&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classn_f_r_t_o_s_peripheral_1_1c_u_a_r_t_t_x.htm">nFRTOSPeripheral::cUARTTX</a>&lt; N &gt;::run </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Transmit task loop. </p>
<p>Read TX queue and output line over hardware UART </p>

<p>Implements <a class="el" href="classn_f_r_t_o_s_1_1c_task.htm#a80ef40a1ef27e6fdd396c87834c55f9d">nFRTOS::cTask</a>.</p>

</div>
</div>
<a id="ae732fb1a9adc3e9db48fb1869823f348"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae732fb1a9adc3e9db48fb1869823f348">&#9670;&nbsp;</a></span>transmit() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;uint16_t N&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="classn_f_r_t_o_s_peripheral_1_1c_u_a_r_t_t_x.htm">nFRTOSPeripheral::cUARTTX</a>&lt; N &gt;::transmit </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>pscTextLine</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Transmit given character string over UART, FRTOS task safe, posts on TX queue. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">pscTextLine</td><td>Null terminated character string pointer. Should include line ending "\r\n" </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Transmit success or failure </dd></dl>

</div>
</div>
<a id="a853961564553667080d4ad7cd82b5707"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a853961564553667080d4ad7cd82b5707">&#9670;&nbsp;</a></span>transmit() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;uint16_t N&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="classn_f_r_t_o_s_peripheral_1_1c_u_a_r_t_t_x.htm">nFRTOSPeripheral::cUARTTX</a>&lt; N &gt;::transmit </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>pscTextLine</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint8_t&#160;</td>
          <td class="paramname"><em>ucLength</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Transmit given fixed length character string over UART, FRTOS task safe, posts on TX queue. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">pscTextLine</td><td>Null terminated character string pointer. Should include line ending "\r\n" </td></tr>
    <tr><td class="paramdir"></td><td class="paramname">ucLength</td><td>Length of string in characters, should not include NULL terminator </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Transmit success or failure </dd></dl>

</div>
</div>
<a id="a9cff5b85dac838e8fea24572118863c6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9cff5b85dac838e8fea24572118863c6">&#9670;&nbsp;</a></span>transmit() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;uint16_t N&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="classn_f_r_t_o_s_peripheral_1_1c_u_a_r_t_t_x.htm">nFRTOSPeripheral::cUARTTX</a>&lt; N &gt;::transmit </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classn_text_1_1c_text_line.htm">nText::cTextLine</a>&lt; N &gt; &amp;&#160;</td>
          <td class="paramname"><em>xTextLine</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Transmit given cTextLine over UART, FRTOS task safe, posts on TX queue. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">xTextLine</td><td>Reference to instance of text line to send. Should include line ending like "\r\n" </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Transmit success or failure </dd></dl>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><b>nFRTOSPeripheral</b></li><li class="navelem"><a class="el" href="classn_f_r_t_o_s_peripheral_1_1c_u_a_r_t_t_x.htm">cUARTTX</a></li>
    <li class="footer">Generated on Mon Jan 1 2024 17:03:14 for ArduinoFRTOSGCPP by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
