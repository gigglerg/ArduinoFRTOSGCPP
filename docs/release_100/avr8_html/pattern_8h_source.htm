<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArduinoFRTOSGCPP: pattern.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(function() { init_search(); });
/* @license-end */
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="doxygenstyle.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">ArduinoFRTOSGCPP
   &#160;<span id="projectnumber">d91a63f (git)</span>
   </div>
   <div id="projectbrief">Library for accessing flash with ware levelling, supporting Arduino and OpenSTM32 (GPL).</div>
  </td>
   <td>        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
</td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('pattern_8h_source.htm',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">pattern.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="pattern_8h.htm">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/**</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * \file</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> * Simple class wrappers and associated structures for common design patterns</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * PROJECT          : FRTOS GCPP</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> * TARGET SYSTEM    : Arduino, Maple Mini</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160; </div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#ifndef pattern_h</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#define pattern_h</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160; </div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="preprocessor">#include &lt;string.h&gt;</span>        <span class="comment">// i know C api...</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160; </div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="keyword">namespace </span>nPattern {<span class="comment"></span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">     * A template class implementing Singleton design pattern.  Instantiate like cMyClass &amp;instance=cSingleton&lt;cMyClass&gt;::getInstance();</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">     * \tparam T Class desired to be made Singleton</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">class</span> T&gt;</div>
<div class="line"><a name="l00020"></a><span class="lineno"><a class="line" href="classn_pattern_1_1c_singleton.htm">   20</a></span>&#160;    <span class="keyword">class </span><a class="code" href="classn_pattern_1_1c_singleton.htm">cSingleton</a> {</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;        <span class="keyword">public</span>:<span class="comment"></span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment">            /**</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment">             * Get Singleton instance</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="comment">             *</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="comment">             * \return Class reference</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="comment">             */</span></div>
<div class="line"><a name="l00027"></a><span class="lineno"><a class="line" href="classn_pattern_1_1c_singleton.htm#a37cfe86e405c642de018c97be11ffca7">   27</a></span>&#160;            <span class="keyword">static</span> T&amp; <a class="code" href="classn_pattern_1_1c_singleton.htm#a37cfe86e405c642de018c97be11ffca7">getInstance</a>() {</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;                <span class="keyword">static</span> T xSingleInstance{};</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160; </div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;                <span class="keywordflow">return</span> xSingleInstance;</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;            }</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160; </div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160; </div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;        <span class="keyword">protected</span>:</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;            <a class="code" href="classn_pattern_1_1c_singleton.htm">cSingleton</a>() { };                                        <span class="comment">///&lt; Prevent construction</span></div>
<div class="line"><a name="l00036"></a><span class="lineno"><a class="line" href="classn_pattern_1_1c_singleton.htm#a6fbbc96c83353d9f459d277bea2febc2">   36</a></span>&#160;<span class="comment"></span>            <a class="code" href="classn_pattern_1_1c_singleton.htm#a6fbbc96c83353d9f459d277bea2febc2">~cSingleton</a>() { };                                       <span class="comment">///&lt; Prevent unwanted destruction</span></div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="comment"></span>            <a class="code" href="classn_pattern_1_1c_singleton.htm">cSingleton</a>(<span class="keyword">const</span> <a class="code" href="classn_pattern_1_1c_singleton.htm">cSingleton&lt;T&gt;</a>&amp;) = <span class="keyword">delete</span>;               <span class="comment">///&lt; Prevent construction by copying</span></div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="comment"></span>            <a class="code" href="classn_pattern_1_1c_singleton.htm">cSingleton</a>&amp; <a class="code" href="classn_pattern_1_1c_singleton.htm#a2f44ba4e6feddd37b89046352bd6fb5e">operator=</a>(<span class="keyword">const</span> <a class="code" href="classn_pattern_1_1c_singleton.htm">cSingleton&lt;T&gt;</a>&amp;) = <span class="keyword">delete</span>;    <span class="comment">///&lt; Prevent assignment</span></div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="comment"></span>    }; <span class="comment">// class cSingleton</span></div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160; </div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="comment">     * Forward declaration of class cObserver</span></div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    <span class="keyword">typedef</span> <span class="keyword">class </span>cObserved;</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160; </div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="comment">     * An abstract class performing an implemention of the observer design pattern - observer part (listener)</span></div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00051"></a><span class="lineno"><a class="line" href="classn_pattern_1_1c_observer.htm">   51</a></span>&#160;    <span class="keyword">class </span><a class="code" href="classn_pattern_1_1c_observer.htm">cObserver</a> {</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;        <span class="keyword">public</span>:</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="comment">            /**</span></div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="comment">             * Update (or callback) method invoked by cObserved objects</span></div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="comment">             *</span></div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="comment">             * \param[in] pxSender Pointer to \see cObserved instance, sender of event</span></div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="comment">             * \return Update handled state</span></div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="comment">             */</span></div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;            <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="classn_pattern_1_1c_observer.htm#a570b21e438389ea833541237b8bcaa0b">update</a>(<span class="keyword">const</span> <a class="code" href="classn_pattern_1_1c_observed.htm">cObserved</a> *pxSender) = 0;</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160; </div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    }; <span class="comment">// class cObserver</span></div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160; </div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="comment">     * Maximum number of observed, listeners (observers).  Define your own should you wish to change</span></div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="preprocessor">#if !defined(COBSERVED_LISTENER_MAX)</span></div>
<div class="line"><a name="l00069"></a><span class="lineno"><a class="line" href="pattern_8h.htm#aee82db96a63dae20185e534043a41ebd">   69</a></span>&#160;<span class="preprocessor">    #define COBSERVED_LISTENER_MAX    6        // Arbitrary, finger in the air?  north-east today so 6</span></div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160; </div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;<span class="comment">     * A class performing an implementation of the observer design pattern - subject/observed part (source)</span></div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="comment">     * \todo Refactor to use template</span></div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00078"></a><span class="lineno"><a class="line" href="classn_pattern_1_1c_observed.htm">   78</a></span>&#160;    <span class="keyword">class </span><a class="code" href="classn_pattern_1_1c_observed.htm">cObserved</a> : <span class="keyword">public</span> <a class="code" href="classn_pattern_1_1c_observer.htm">cObserver</a> {</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;        <span class="keyword">public</span>:</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;            <a class="code" href="classn_pattern_1_1c_observed.htm">cObserved</a>(<span class="keyword">const</span> uint32_t ulEvent = 0UL) : _ucListenerCount(0), _ulEvent(ulEvent), <a class="code" href="classn_pattern_1_1c_observer.htm">cObserver</a>() {</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;                memset(&amp;<a class="code" href="classn_pattern_1_1c_observed.htm#a2bf34fdd2ea49df76a5de8793bfeaa30">_pxListener</a>, 0, <span class="keyword">sizeof</span>(<a class="code" href="classn_pattern_1_1c_observed.htm#a2bf34fdd2ea49df76a5de8793bfeaa30">_pxListener</a>));    <span class="comment">// NULL pointers</span></div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;            }</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160; </div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="comment">            /**</span></div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="comment">             * Append an observer instance.  Maximum attachments to \ref COBSERVED_LISTENER_MAX</span></div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="comment">             *</span></div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="comment">             * \todo Refactor, attempt to use references</span></div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="comment">             *</span></div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;<span class="comment">             * \param[in] pxL Pointer to instance</span></div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="comment">             */</span></div>
<div class="line"><a name="l00092"></a><span class="lineno"><a class="line" href="classn_pattern_1_1c_observed.htm#a7143d6699d87e732ddd1b3a2e918df78">   92</a></span>&#160;            <span class="keywordtype">void</span> <a class="code" href="classn_pattern_1_1c_observed.htm#a7143d6699d87e732ddd1b3a2e918df78">appendObserver</a>(<a class="code" href="classn_pattern_1_1c_observer.htm">cObserver</a> *pxL) {</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;                <span class="keywordflow">if</span> (_ucListenerCount&lt;<a class="code" href="pattern_8h.htm#aee82db96a63dae20185e534043a41ebd">COBSERVED_LISTENER_MAX</a>) {</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;                    <a class="code" href="classn_pattern_1_1c_observed.htm#a2bf34fdd2ea49df76a5de8793bfeaa30">_pxListener</a>[_ucListenerCount++]=pxL;</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;                }</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;            }</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160; </div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;<span class="comment">            /**</span></div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;<span class="comment">             * Observed instance notifier method, invokes all subscribers.  Each subscriber can accept or reject the notification</span></div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;<span class="comment">             * and the former will stop the invocation process for any given notification.  order of scribers can be important</span></div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;<span class="comment">             */</span></div>
<div class="line"><a name="l00103"></a><span class="lineno"><a class="line" href="classn_pattern_1_1c_observed.htm#ac581f08fec54646130aabb0969cbaba6">  103</a></span>&#160;            <span class="keywordtype">void</span> <a class="code" href="classn_pattern_1_1c_observed.htm#ac581f08fec54646130aabb0969cbaba6">notify</a>() {</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;                uint8_t ucI;</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160; </div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;                <span class="comment">// for all observers ... do</span></div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;                <span class="keywordflow">for</span>(ucI=0; ucI&lt;_ucListenerCount; ucI++) {</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;                    <span class="comment">// instance setup?</span></div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;                    <span class="keywordflow">if</span> (<a class="code" href="classn_pattern_1_1c_observed.htm#a2bf34fdd2ea49df76a5de8793bfeaa30">_pxListener</a>[ucI]) {</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;                        <span class="comment">// invoke observer</span></div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;                        <span class="keywordflow">if</span> (<a class="code" href="classn_pattern_1_1c_observed.htm#a2bf34fdd2ea49df76a5de8793bfeaa30">_pxListener</a>[ucI]-&gt;<a class="code" href="classn_pattern_1_1c_observer.htm#a570b21e438389ea833541237b8bcaa0b">update</a>(<span class="keyword">this</span>)) {</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;                            <span class="comment">// accepted by this observer and we&#39;re done...</span></div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;                            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;                        }</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;                    }</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;                }</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;            }</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160; </div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;<span class="comment">            /**</span></div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="comment">             * Get event.  The numeric as specified at construction</span></div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="comment">             *</span></div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;<span class="comment">             * \return Event</span></div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="comment">             */</span></div>
<div class="line"><a name="l00125"></a><span class="lineno"><a class="line" href="classn_pattern_1_1c_observed.htm#a0a6d8152ca8760da58e82996088474df">  125</a></span>&#160;            uint32_t <a class="code" href="classn_pattern_1_1c_observed.htm#a0a6d8152ca8760da58e82996088474df">getEvent</a>()<span class="keyword"> const </span>{</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;                <span class="keywordflow">return</span> _ulEvent;</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;            }</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160; </div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;        <span class="keyword">private</span>:<span class="comment"></span></div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;<span class="comment">            /**</span></div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;<span class="comment">             * Observered object can also be an observer on another observed object.  In this case we leave it empty</span></div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="comment">             *</span></div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;<span class="comment">             * \param[in] pxSender Instance of observed or source of the notification, cast accordingly</span></div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;<span class="comment">             * \return Accepted updated state</span></div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;<span class="comment">             * \retval true Accepted a notification so update operation terminates</span></div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;<span class="comment">             * \retval false We never accept any notification, pass it on</span></div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;<span class="comment">             */</span></div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;            <span class="keywordtype">bool</span> <a class="code" href="classn_pattern_1_1c_observer.htm#a570b21e438389ea833541237b8bcaa0b">update</a>(<span class="keyword">const</span> <a class="code" href="classn_pattern_1_1c_observed.htm">cObserved</a> *pxSender) { <span class="keywordflow">return</span> <span class="keyword">false</span>; }     <span class="comment">///&lt; Ignored</span></div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;        <span class="keyword">protected</span>:</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;            uint32_t    _ulEvent;</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;            uint8_t     _ucListenerCount;</div>
<div class="line"><a name="l00143"></a><span class="lineno"><a class="line" href="classn_pattern_1_1c_observed.htm#a2bf34fdd2ea49df76a5de8793bfeaa30">  143</a></span>&#160;            <a class="code" href="classn_pattern_1_1c_observer.htm">cObserver</a>*    <a class="code" href="classn_pattern_1_1c_observed.htm#a2bf34fdd2ea49df76a5de8793bfeaa30">_pxListener</a>[<a class="code" href="pattern_8h.htm#aee82db96a63dae20185e534043a41ebd">COBSERVED_LISTENER_MAX</a>];           <span class="comment">///&lt; \todo Make vector</span></div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;<span class="comment"></span>    }; <span class="comment">// class cObserved</span></div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160; </div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;} <span class="comment">// namespace nPattern</span></div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160; </div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;<span class="preprocessor">#endif // pattern_h</span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="aclassn_pattern_1_1c_observed_htm_a2bf34fdd2ea49df76a5de8793bfeaa30"><div class="ttname"><a href="classn_pattern_1_1c_observed.htm#a2bf34fdd2ea49df76a5de8793bfeaa30">nPattern::cObserved::_pxListener</a></div><div class="ttdeci">cObserver * _pxListener[COBSERVED_LISTENER_MAX]</div><div class="ttdef"><b>Definition:</b> pattern.h:143</div></div>
<div class="ttc" id="aclassn_pattern_1_1c_observer_htm"><div class="ttname"><a href="classn_pattern_1_1c_observer.htm">nPattern::cObserver</a></div><div class="ttdoc">An abstract class performing an implemention of the observer design pattern - observer part (listener...</div><div class="ttdef"><b>Definition:</b> pattern.h:51</div></div>
<div class="ttc" id="aclassn_pattern_1_1c_singleton_htm_a2f44ba4e6feddd37b89046352bd6fb5e"><div class="ttname"><a href="classn_pattern_1_1c_singleton.htm#a2f44ba4e6feddd37b89046352bd6fb5e">nPattern::cSingleton::operator=</a></div><div class="ttdeci">cSingleton &amp; operator=(const cSingleton&lt; T &gt; &amp;)=delete</div><div class="ttdoc">Prevent assignment.</div></div>
<div class="ttc" id="aclassn_pattern_1_1c_observed_htm_ac581f08fec54646130aabb0969cbaba6"><div class="ttname"><a href="classn_pattern_1_1c_observed.htm#ac581f08fec54646130aabb0969cbaba6">nPattern::cObserved::notify</a></div><div class="ttdeci">void notify()</div><div class="ttdoc">Observed instance notifier method, invokes all subscribers.</div><div class="ttdef"><b>Definition:</b> pattern.h:103</div></div>
<div class="ttc" id="aclassn_pattern_1_1c_observed_htm_a7143d6699d87e732ddd1b3a2e918df78"><div class="ttname"><a href="classn_pattern_1_1c_observed.htm#a7143d6699d87e732ddd1b3a2e918df78">nPattern::cObserved::appendObserver</a></div><div class="ttdeci">void appendObserver(cObserver *pxL)</div><div class="ttdoc">Append an observer instance.</div><div class="ttdef"><b>Definition:</b> pattern.h:92</div></div>
<div class="ttc" id="aclassn_pattern_1_1c_singleton_htm"><div class="ttname"><a href="classn_pattern_1_1c_singleton.htm">nPattern::cSingleton</a></div><div class="ttdoc">A template class implementing Singleton design pattern.</div><div class="ttdef"><b>Definition:</b> pattern.h:20</div></div>
<div class="ttc" id="aclassn_pattern_1_1c_observer_htm_a570b21e438389ea833541237b8bcaa0b"><div class="ttname"><a href="classn_pattern_1_1c_observer.htm#a570b21e438389ea833541237b8bcaa0b">nPattern::cObserver::update</a></div><div class="ttdeci">virtual bool update(const cObserved *pxSender)=0</div><div class="ttdoc">Update (or callback) method invoked by cObserved objects.</div></div>
<div class="ttc" id="aclassn_pattern_1_1c_singleton_htm_a6fbbc96c83353d9f459d277bea2febc2"><div class="ttname"><a href="classn_pattern_1_1c_singleton.htm#a6fbbc96c83353d9f459d277bea2febc2">nPattern::cSingleton::~cSingleton</a></div><div class="ttdeci">~cSingleton()</div><div class="ttdoc">Prevent construction.</div><div class="ttdef"><b>Definition:</b> pattern.h:36</div></div>
<div class="ttc" id="apattern_8h_htm_aee82db96a63dae20185e534043a41ebd"><div class="ttname"><a href="pattern_8h.htm#aee82db96a63dae20185e534043a41ebd">COBSERVED_LISTENER_MAX</a></div><div class="ttdeci">#define COBSERVED_LISTENER_MAX</div><div class="ttdoc">Maximum number of observed, listeners (observers).</div><div class="ttdef"><b>Definition:</b> pattern.h:69</div></div>
<div class="ttc" id="aclassn_pattern_1_1c_observed_htm"><div class="ttname"><a href="classn_pattern_1_1c_observed.htm">nPattern::cObserved</a></div><div class="ttdoc">A class performing an implementation of the observer design pattern - subject/observed part (source)</div><div class="ttdef"><b>Definition:</b> pattern.h:78</div></div>
<div class="ttc" id="aclassn_pattern_1_1c_singleton_htm_a37cfe86e405c642de018c97be11ffca7"><div class="ttname"><a href="classn_pattern_1_1c_singleton.htm#a37cfe86e405c642de018c97be11ffca7">nPattern::cSingleton::getInstance</a></div><div class="ttdeci">static T &amp; getInstance()</div><div class="ttdoc">Get Singleton instance.</div><div class="ttdef"><b>Definition:</b> pattern.h:27</div></div>
<div class="ttc" id="aclassn_pattern_1_1c_observed_htm_a0a6d8152ca8760da58e82996088474df"><div class="ttname"><a href="classn_pattern_1_1c_observed.htm#a0a6d8152ca8760da58e82996088474df">nPattern::cObserved::getEvent</a></div><div class="ttdeci">uint32_t getEvent() const</div><div class="ttdoc">Get event.</div><div class="ttdef"><b>Definition:</b> pattern.h:125</div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="pattern_8h.htm">pattern.h</a></li>
    <li class="footer">Generated on Mon Jan 1 2024 17:03:14 for ArduinoFRTOSGCPP by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
