<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArduinoFRTOSGCPP: pin_isr.ino</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(function() { init_search(); });
/* @license-end */
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="doxygenstyle.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">ArduinoFRTOSGCPP
   &#160;<span id="projectnumber">d91a63f (git)</span>
   </div>
   <div id="projectbrief">Library for accessing flash with ware levelling, supporting Arduino and OpenSTM32 (GPL).</div>
  </td>
   <td>        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
</td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('pin_isr_8ino-example.htm',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">pin_isr.ino</div>  </div>
</div><!--header-->
<div class="contents">
<p>file blinky.ino</p>
<div class="fragment"><div class="line"><span class="comment">/**</span></div>
<div class="line"><span class="comment"> * Example use of FRTOSGCPP library - Hook a pin change IRQ to a class specific ISR and output via serial a message on changes</span></div>
<div class="line"><span class="comment"> *</span></div>
<div class="line"><span class="comment"> * Architecture support:</span></div>
<div class="line"><span class="comment"> *  AVR8 (Uno/Nano)</span></div>
<div class="line"><span class="comment"> *  AT91 (Due)</span></div>
<div class="line"><span class="comment"> *  STM32 (F103.  Blue pill/Maple mini)</span></div>
<div class="line"><span class="comment"> *</span></div>
<div class="line"><span class="comment"> * DG, 2019</span></div>
<div class="line"><span class="comment"> */</span></div>
<div class="line"> </div>
<div class="line"><span class="comment">// Include FRTOS</span></div>
<div class="line"><span class="preprocessor">#if defined(ARDUINO_SAM_DUE)</span></div>
<div class="line"><span class="comment">// Due FRTOS (ARM7)</span></div>
<div class="line"><span class="preprocessor">#include &lt;FreeRTOS_ARM.h&gt;</span></div>
<div class="line"> </div>
<div class="line"><span class="comment">// Macro to include Ardunio Due FRTOS specifics</span></div>
<div class="line"><span class="comment">//#define FRTOS_SAM_CONTROL</span></div>
<div class="line"> </div>
<div class="line"><span class="preprocessor">#define HW_UART      Serial1</span></div>
<div class="line"> </div>
<div class="line"><span class="preprocessor">#elif defined(ARDUINO_ARCH_STM32)</span></div>
<div class="line"> </div>
<div class="line"><span class="comment">// Maple Mini FRTOS (Cortex M3)</span></div>
<div class="line"><span class="preprocessor">#include &lt;MapleFreeRTOS900.h&gt;</span></div>
<div class="line"> </div>
<div class="line"><span class="preprocessor">#define HW_UART      Serial1</span></div>
<div class="line"> </div>
<div class="line"><span class="preprocessor">#elif defined(ARDUINO_ARCH_AVR)</span></div>
<div class="line"> </div>
<div class="line"><span class="comment">// AVR8 (UNO/Nano etc.)</span></div>
<div class="line"><span class="preprocessor">#include &lt;FreeRTOS_AVR.h&gt;</span></div>
<div class="line"> </div>
<div class="line"><span class="preprocessor">#define HW_UART      Serial</span></div>
<div class="line"> </div>
<div class="line"><span class="preprocessor">#else</span></div>
<div class="line"><span class="preprocessor">#error Unsupported core</span></div>
<div class="line"><span class="preprocessor">#endif</span></div>
<div class="line"> </div>
<div class="line"> </div>
<div class="line"><span class="preprocessor">#include &lt;<a class="code" href="frtosgcpp_8h.htm">frtosgcpp.h</a>&gt;</span></div>
<div class="line"> </div>
<div class="line"> </div>
<div class="line"><span class="comment">/*</span></div>
<div class="line"><span class="comment"> * A class to monitor a UART receive queue, accepting data on when specific text received.  Forwards message to TX UART queue</span></div>
<div class="line"><span class="comment"> *</span></div>
<div class="line"><span class="comment"> * \tparam pinN Pin number of LED output</span></div>
<div class="line"><span class="comment"> * \tparam lineLengthN Text line maximum length (characters, including NULL)</span></div>
<div class="line"><span class="comment"> */</span></div>
<div class="line"><span class="keyword">template</span> &lt;u<span class="keywordtype">int</span>32_t pinN, u<span class="keywordtype">int</span>32_t lineLengthN&gt;</div>
<div class="line"><span class="keyword">class </span>cPIN : <span class="keyword">public</span> cTask, <span class="keyword">protected</span> cIrqHandler {</div>
<div class="line"> </div>
<div class="line">  <span class="keyword">public</span>:</div>
<div class="line">    <span class="comment">/*</span></div>
<div class="line"><span class="comment">     * Constructor.  make stable instance</span></div>
<div class="line"><span class="comment">     *</span></div>
<div class="line"><span class="comment">     * \param[in] xTxUart Transmit UART</span></div>
<div class="line"><span class="comment">     * \param[in] event Event for observer pattern (optional)</span></div>
<div class="line"><span class="comment">     */</span></div>
<div class="line">    cPIN(cUARTTX&lt;lineLengthN&gt; &amp;xTxUart, <span class="keyword">const</span> uint32_t event = 0UL) : _xTxUart(xTxUart) {</div>
<div class="line">    }</div>
<div class="line"> </div>
<div class="line">    <span class="comment">/*</span></div>
<div class="line"><span class="comment">     * Create task and start it + hook port change interrupt for pin</span></div>
<div class="line"><span class="comment">     *</span></div>
<div class="line"><span class="comment">     * \param[in] ulPriority Task priority level.  Default tskIDLE_PRIORITY + 1</span></div>
<div class="line"><span class="comment">     * \param[in] ulStackSize Stack size in Bytes, default configMINIMAL_STACK_SIZE</span></div>
<div class="line"><span class="comment">     * \return Overall state</span></div>
<div class="line"><span class="comment">     * \retval true Join successful</span></div>
<div class="line"><span class="comment">     * \retval false Join failed, one or more problems caused failure</span></div>
<div class="line"><span class="comment">     */</span></div>
<div class="line">    <span class="keywordtype">bool</span> join(<span class="keyword">const</span> UBaseType_t ulPriority = tskIDLE_PRIORITY + 1, <span class="keyword">const</span> uint32_t ulStackSize = configMINIMAL_STACK_SIZE) {</div>
<div class="line">      <span class="keywordflow">if</span> (!isValidHandle()) {</div>
<div class="line">        start(NULL, tskIDLE_PRIORITY + 1);  <span class="comment">// Just above Idle tasking</span></div>
<div class="line"> </div>
<div class="line">        <span class="comment">// Attach interrupt</span></div>
<div class="line">        <a name="a0"></a><a class="code" href="classn_support_1_1c_irq_monitor.htm#ad6dad4a759bf700878efc76bd848902c">nSupport::cIrqMonitor::attach</a>(<span class="keyword">static_cast&lt;</span>uint32_t<span class="keyword">&gt;</span>(pinN), <span class="keyword">static_cast&lt;</span>cIrqHandler&amp;<span class="keyword">&gt;</span>(*<span class="keyword">this</span>), cIrqMonitor::ePINMODE_CHANGE);</div>
<div class="line">      }</div>
<div class="line"> </div>
<div class="line">      <span class="keywordflow">return</span> isValidHandle();</div>
<div class="line">    }</div>
<div class="line"> </div>
<div class="line">  <span class="keyword">protected</span>:</div>
<div class="line">    <span class="comment">/*</span></div>
<div class="line"><span class="comment">     * Task/thread run handler method, invoked by FRTOS, endless loop.  Handle responses to pin change (not in ISR)</span></div>
<div class="line"><span class="comment">     */</span></div>
<div class="line">    <span class="keywordtype">void</span> run() {</div>
<div class="line">      <span class="keywordflow">for</span> (;;) {</div>
<div class="line">        <span class="comment">// Wait forever on ISR</span></div>
<div class="line">        ::ulTaskNotifyTake(pdTRUE, portMAX_DELAY);</div>
<div class="line"> </div>
<div class="line">        <span class="comment">// It&#39;s happened do something...</span></div>
<div class="line">        _xTxUart.transmit(<span class="stringliteral">&quot;Change&quot;</span>);</div>
<div class="line">      }</div>
<div class="line">    }</div>
<div class="line"> </div>
<div class="line"> </div>
<div class="line">    <span class="comment">/*</span></div>
<div class="line"><span class="comment">     * ISR for pin</span></div>
<div class="line"><span class="comment">     */</span></div>
<div class="line">    <span class="keywordtype">void</span> isr(<span class="keyword">const</span> uint32_t pin) {</div>
<div class="line">      BaseType_t xHigherPriorityTaskWoken = pdFALSE;</div>
<div class="line"> </div>
<div class="line">      ::vTaskNotifyGiveFromISR( getHandle(), &amp;xHigherPriorityTaskWoken );</div>
<div class="line"><span class="preprocessor">#if !defined(ARDUINO_ARCH_AVR)</span></div>
<div class="line">      portYIELD_FROM_ISR(xHigherPriorityTaskWoken);</div>
<div class="line"><span class="preprocessor">#endif</span></div>
<div class="line">    }</div>
<div class="line"> </div>
<div class="line">  <span class="keyword">private</span>:</div>
<div class="line">    cUARTTX&lt;lineLengthN&gt; &amp;_xTxUart;   <span class="comment">// TX UART instance for output</span></div>
<div class="line">};</div>
<div class="line"> </div>
<div class="line"><span class="preprocessor">#define UART_LINE_LEN   16</span></div>
<div class="line"> </div>
<div class="line"><span class="comment">// Transmit UART task and queue to 4 lines</span></div>
<div class="line">cUARTTX&lt;UART_LINE_LEN&gt;    xUartTX(HW_UART, 4);</div>
<div class="line"> </div>
<div class="line"><span class="comment">// Pin 14 change handler instance, update pin number if you want to monitor another</span></div>
<div class="line">cPIN&lt;14, UART_LINE_LEN&gt; xPin(xUartTX);</div>
<div class="line"> </div>
<div class="line"> </div>
<div class="line"><span class="keywordtype">void</span> setup() {</div>
<div class="line">  <span class="comment">// Arduino hardware serial setup</span></div>
<div class="line">  Serial.begin(115200);</div>
<div class="line">  Serial.println(<span class="stringliteral">&quot;Started&quot;</span>);</div>
<div class="line"> </div>
<div class="line">  xUartTX.join();</div>
<div class="line">  xPin.join();</div>
<div class="line"> </div>
<div class="line">  <span class="comment">// In debug console look for messages when pin changed</span></div>
<div class="line"> </div>
<div class="line">  <span class="comment">// Start pre-emption (all ok we block here)</span></div>
<div class="line">  vTaskStartScheduler();</div>
<div class="line">  <span class="keywordflow">for</span> (;;);    <span class="comment">// dont enter Arduino loop() function...</span></div>
<div class="line">}</div>
<div class="line"> </div>
<div class="line"><span class="keywordtype">void</span> loop() {</div>
<div class="line">  <span class="comment">// We never get here...</span></div>
<div class="line">}</div>
</div><!-- fragment --> </div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="afrtosgcpp_8h_htm"><div class="ttname"><a href="frtosgcpp_8h.htm">frtosgcpp.h</a></div></div>
<div class="ttc" id="aclassn_support_1_1c_irq_monitor_htm_ad6dad4a759bf700878efc76bd848902c"><div class="ttname"><a href="classn_support_1_1c_irq_monitor.htm#ad6dad4a759bf700878efc76bd848902c">nSupport::cIrqMonitor::attach</a></div><div class="ttdeci">static bool attach(const uint32_t pin, cIrqHandler &amp;handler, const ePINMODE mode)</div><div class="ttdoc">Attach ISR to IRQ by pin number.</div><div class="ttdef"><b>Definition:</b> support.h:89</div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="footer">Generated on Mon Jan 1 2024 17:03:14 for ArduinoFRTOSGCPP by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
