<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArduinoFRTOSGCPP: support.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(function() { init_search(); });
/* @license-end */
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="doxygenstyle.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">ArduinoFRTOSGCPP
   &#160;<span id="projectnumber">d91a63f (git)</span>
   </div>
   <div id="projectbrief">Library for accessing flash with ware levelling, supporting Arduino and OpenSTM32 (GPL).</div>
  </td>
   <td>        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
</td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('support_8h_source.htm',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">support.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="support_8h.htm">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/**</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * \file</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> * General framework support functionality consider missing from Arduino</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * PROJECT          : FRTOS GCPP</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> * TARGET SYSTEM    : Arduino, Maple Mini</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160; </div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#ifndef support_h</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#define support_h</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160; </div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="pattern_8h.htm">pattern.h</a>&quot;</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160; </div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="keyword">namespace </span>nSupport {<span class="comment"></span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">     * IRQ handler abstract class with user defined ISR method.  The related pin change IRQ when fired will </span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment">     * endup within this class.</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00018"></a><span class="lineno"><a class="line" href="classn_support_1_1c_irq_handler.htm">   18</a></span>&#160;    <span class="keyword">class </span><a class="code" href="classn_support_1_1c_irq_handler.htm">cIrqHandler</a> {</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;        <span class="keyword">public</span>:</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160; </div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;            <span class="keyword">virtual</span> <span class="keywordtype">void</span> isr(<span class="keyword">const</span> uint32_t pin) = 0;</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160; </div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;    }; <span class="comment">// class cIrqHandler</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160; </div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="comment">     * Maximum I/O pins covered by class \see cIrqMonitor. If you require further I/O covered increase but </span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="comment">     * also add switch cases to the attach method</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="comment">     */</span>    </div>
<div class="line"><a name="l00030"></a><span class="lineno"><a class="line" href="support_8h.htm#aa8f95fd30f8eb0766ff16e66d11b1a87">   30</a></span>&#160;<span class="preprocessor">    #define CIRQMONITORED_MAX        24UL</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160; </div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="comment">/*! \cond PRIVATE */</span><span class="comment"></span></div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="comment">     * Macro to generate pin change ISR handler.  The form is a generic static function which is required by </span></div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="comment">     * the Arduino framework as a callback.  From here each ISR checks if its assoicated class handler method </span></div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="comment">     * has been defined, if so invoke it.  This is a helper macro to reduce code duplication</span></div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="comment">     * \param[in] pin Pin number, top less than \ref CIRQMONITORED_MAX</span></div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="comment">     */</span>    </div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="preprocessor">    #define CIRQMONITORED_PIN_ISR_FUNC(pin)  static void pinISR##pin(void) { \</span></div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="preprocessor">                                    cIrqHandler* pih = *cIrqMonitor::getHandlerPtr(pin); \</span></div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="preprocessor">                                    if (pih) { \</span></div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="preprocessor">                                        pih-&gt;isr(pin); \</span></div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="preprocessor">                                    } \</span></div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="preprocessor">                                }</span></div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160; </div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="comment">     * Macro to generate a case statement and return of static ISR function related to given pin</span></div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="comment">     * \param[in] pin Pin number, top less than \ref CIRQMONITORED_MAX</span></div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="comment">     */</span>    </div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="preprocessor">    #define CIRQMONITORED_PIN_ISR_CASE(pin)    case pin : \</span></div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="preprocessor">                                        return &amp;pinISR##pin</span></div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="comment">/*! \endcond */</span></div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160; </div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="comment">     * A class offering IRQ monitoring services that do not require C style callbacks.  The handler </span></div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="comment">     * class inherits \ref cIrqHandler which includes a pin specific ISR and is encapsulated within </span></div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="comment">     * handler class.</span></div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="comment">     * \note Maple Mini implementation actually offers something like this with C callbacks but most </span></div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="comment">     * other frameworks don&#39;t</span></div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00067"></a><span class="lineno"><a class="line" href="classn_support_1_1c_irq_monitor.htm">   67</a></span>&#160;    <span class="keyword">class </span><a class="code" href="classn_support_1_1c_irq_monitor.htm">cIrqMonitor</a> {</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;        <span class="keyword">public</span>:<span class="comment"></span></div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="comment">            /**</span></div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="comment">             * Enum of possible pin change modes which are state or transitions</span></div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="comment">             */</span></div>
<div class="line"><a name="l00072"></a><span class="lineno"><a class="line" href="classn_support_1_1c_irq_monitor.htm#a1ce38b9df13bba6d20af9d8cca30132d">   72</a></span>&#160;            <span class="keyword">typedef</span> <span class="keyword">enum</span> {</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;                ePINMODE_LOW        = LOW,</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;                ePINMODE_CHANGE     = CHANGE,</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;                ePINMODE_RISING     = RISING,</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;                ePINMODE_FALLING    = FALLING,</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;                ePINMODE_HIGH       = HIGH,</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;            }<a class="code" href="classn_support_1_1c_irq_monitor.htm#a1ce38b9df13bba6d20af9d8cca30132d">ePINMODE</a>;</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160; </div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="comment">            /**</span></div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="comment">             * Attach ISR to IRQ by pin number</span></div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="comment">             *</span></div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;<span class="comment">             * \param[in] pin Pin number, top less than \ref CIRQMONITORED_MAX</span></div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="comment">             * \param[in] handler Reference to handling class instance</span></div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="comment">             * \param[in] mode IRQ trigger mode /ref ePINMODE</span></div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="comment">             * \return Attached state</span></div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="comment">             */</span></div>
<div class="line"><a name="l00089"></a><span class="lineno"><a class="line" href="classn_support_1_1c_irq_monitor.htm#ad6dad4a759bf700878efc76bd848902c">   89</a></span>&#160;            <span class="keyword">static</span> <span class="keywordtype">bool</span> <a class="code" href="classn_support_1_1c_irq_monitor.htm#ad6dad4a759bf700878efc76bd848902c">attach</a>(<span class="keyword">const</span> uint32_t pin, <a class="code" href="classn_support_1_1c_irq_handler.htm">cIrqHandler</a> &amp;handler, <span class="keyword">const</span> <a class="code" href="classn_support_1_1c_irq_monitor.htm#a1ce38b9df13bba6d20af9d8cca30132d">ePINMODE</a> mode) {</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;                <span class="keywordtype">bool</span> attached = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;                <a class="code" href="classn_support_1_1c_irq_handler.htm">cIrqHandler</a>** h = cIrqMonitor::getHandlerPtr(pin);</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160; </div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;                <span class="keywordflow">if</span> ((pin&lt;<a class="code" href="support_8h.htm#aa8f95fd30f8eb0766ff16e66d11b1a87">CIRQMONITORED_MAX</a>) &amp;&amp; (!*h)) {</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;                    attached = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;                    *h = &amp;handler;</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;<span class="preprocessor">#if defined(_BOARD_MAPLE_MINI_H_)</span></div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;                    attachInterrupt(<span class="keyword">static_cast&lt;</span>uint8_t<span class="keyword">&gt;</span>(pin), cIrqMonitor::getISRPtr(pin), <span class="keyword">static_cast&lt;</span>ExtIntTriggerMode<span class="keyword">&gt;</span>(mode));</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;                    attachInterrupt(digitalPinToInterrupt(pin), cIrqMonitor::getISRPtr(pin), <span class="keyword">static_cast&lt;</span>uint32_t<span class="keyword">&gt;</span>(mode));</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;                }</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160; </div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;                <span class="keywordflow">return</span> attached;</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;            }</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160; </div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="comment">            /**</span></div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="comment">             * Deattach ISR by pin number</span></div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="comment">             *</span></div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="comment">             * \param[in] pin Pin number, top less than \ref CIRQMONITORED_MAX</span></div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="comment">             * \return Deattached state</span></div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="comment">             */</span></div>
<div class="line"><a name="l00113"></a><span class="lineno"><a class="line" href="classn_support_1_1c_irq_monitor.htm#a8a4c78033b78a886f43ec76aee2ec62b">  113</a></span>&#160;            <span class="keyword">static</span> <span class="keywordtype">bool</span> <a class="code" href="classn_support_1_1c_irq_monitor.htm#a8a4c78033b78a886f43ec76aee2ec62b">deattach</a>(<span class="keyword">const</span> uint32_t pin) {</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;                <span class="keywordtype">bool</span> deattached = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;                <a class="code" href="classn_support_1_1c_irq_handler.htm">cIrqHandler</a>** h = cIrqMonitor::getHandlerPtr(pin);</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160; </div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;                <span class="comment">// cli();</span></div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;                <span class="keywordflow">if</span> ((pin&lt;<a class="code" href="support_8h.htm#aa8f95fd30f8eb0766ff16e66d11b1a87">CIRQMONITORED_MAX</a>) &amp;&amp; (*h)) {</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;                    deattached = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;                    *h = NULL;</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;                }</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;                <span class="comment">// sei();</span></div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160; </div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;                <span class="keywordflow">return</span> deattached;</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;            } <span class="comment">// deattach(...)</span></div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160; </div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;<span class="comment">            /**</span></div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;<span class="comment">             * Query is an ISR attached by pin number</span></div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;<span class="comment">             *</span></div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;<span class="comment">             * \param[in] pin Pin number, top less than \ref CIRQMONITORED_MAX</span></div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="comment">             * \return Attached state</span></div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;<span class="comment">             * \retval true attached</span></div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;<span class="comment">             * \retval false deattached</span></div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;<span class="comment">             */</span></div>
<div class="line"><a name="l00136"></a><span class="lineno"><a class="line" href="classn_support_1_1c_irq_monitor.htm#a19afc06894ec78d4a4a52bdbfde18c35">  136</a></span>&#160;            <span class="keyword">static</span> <span class="keywordtype">bool</span> <a class="code" href="classn_support_1_1c_irq_monitor.htm#a19afc06894ec78d4a4a52bdbfde18c35">isAttached</a>(<span class="keyword">const</span> uint32_t pin) {</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;                <span class="keywordtype">bool</span> attached = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;                <a class="code" href="classn_support_1_1c_irq_handler.htm">cIrqHandler</a>** h = cIrqMonitor::getHandlerPtr(pin);</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160; </div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;                <span class="keywordflow">if</span> ((pin&lt;<a class="code" href="support_8h.htm#aa8f95fd30f8eb0766ff16e66d11b1a87">CIRQMONITORED_MAX</a>) &amp;&amp; (*h)) {</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;                    attached = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;                }</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160; </div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;                <span class="keywordflow">return</span> attached;</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;            } <span class="comment">// isAttached(...)</span></div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160; </div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;<span class="comment">            /**</span></div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;<span class="comment">             * Invoke ISR by pin if attached</span></div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;<span class="comment">             *</span></div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;<span class="comment">             * \note Debug aid</span></div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;<span class="comment">             *</span></div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;<span class="comment">             * \param[in] pin Pin number, top less than \ref CIRQMONITORED_MAX</span></div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;<span class="comment">             */</span></div>
<div class="line"><a name="l00155"></a><span class="lineno"><a class="line" href="classn_support_1_1c_irq_monitor.htm#a190be4d44a6335f2a0a000b7c2d5b694">  155</a></span>&#160;            <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="classn_support_1_1c_irq_monitor.htm#a190be4d44a6335f2a0a000b7c2d5b694">testISR</a>(<span class="keyword">const</span> uint32_t pin) {</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;                <span class="comment">// cli();</span></div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;                (void)cIrqMonitor::getISRPtr(pin)();</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;                <span class="comment">// sei();</span></div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;            }</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;<span class="comment">/*! \cond PRIVATE */</span></div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;        <span class="keyword">protected</span>:</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;            <span class="keyword">typedef</span> void (*tFp)(void);</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;<span class="comment">            /**</span></div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;<span class="comment">             * Specific pin static ISR function required by Arduino framework.  Invokes handling class ISR if present</span></div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;<span class="comment">             */</span></div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;            CIRQMONITORED_PIN_ISR_FUNC(0);</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;            CIRQMONITORED_PIN_ISR_FUNC(1);</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;            CIRQMONITORED_PIN_ISR_FUNC(2);</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;            CIRQMONITORED_PIN_ISR_FUNC(3);</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;            CIRQMONITORED_PIN_ISR_FUNC(4);</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;            CIRQMONITORED_PIN_ISR_FUNC(5);</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;            CIRQMONITORED_PIN_ISR_FUNC(6);</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;            CIRQMONITORED_PIN_ISR_FUNC(7);</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;            CIRQMONITORED_PIN_ISR_FUNC(8);</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;            CIRQMONITORED_PIN_ISR_FUNC(9);</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;            CIRQMONITORED_PIN_ISR_FUNC(10);</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;            CIRQMONITORED_PIN_ISR_FUNC(11);</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;            CIRQMONITORED_PIN_ISR_FUNC(12);</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;            CIRQMONITORED_PIN_ISR_FUNC(13);</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;            CIRQMONITORED_PIN_ISR_FUNC(14);</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;            CIRQMONITORED_PIN_ISR_FUNC(15);</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;            CIRQMONITORED_PIN_ISR_FUNC(16);</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;            CIRQMONITORED_PIN_ISR_FUNC(17);</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;            CIRQMONITORED_PIN_ISR_FUNC(18);</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;            CIRQMONITORED_PIN_ISR_FUNC(19);</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;            CIRQMONITORED_PIN_ISR_FUNC(20);</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;            CIRQMONITORED_PIN_ISR_FUNC(21);</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;            CIRQMONITORED_PIN_ISR_FUNC(22);</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;            CIRQMONITORED_PIN_ISR_FUNC(23);</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160; </div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;<span class="comment">            /**</span></div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;<span class="comment">             * Get pointer to ISR handler class instance of \ref cIrqHandler by pin number.  These handlers are held in an internal static array</span></div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;<span class="comment">             * as it was easier than instantiate out side of this class.</span></div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;<span class="comment">             *</span></div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;<span class="comment">             * \todo Make a vector</span></div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;<span class="comment">             *</span></div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;<span class="comment">             * \param[in] pin Pin number, top less than \ref CIRQMONITORED_MAX</span></div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;<span class="comment">             * \return IRQ handler pointer to a pointer.  The internal storage for class pointer, caller can update as required</span></div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;<span class="comment">             */</span></div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;            <span class="keyword">static</span> <a class="code" href="classn_support_1_1c_irq_handler.htm">cIrqHandler</a>** getHandlerPtr(uint32_t pin) {</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;                <span class="keyword">static</span> <a class="code" href="classn_support_1_1c_irq_handler.htm">cIrqHandler</a>* _handler[<a class="code" href="support_8h.htm#aa8f95fd30f8eb0766ff16e66d11b1a87">CIRQMONITORED_MAX</a>];</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160; </div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;                <span class="keywordflow">return</span> &amp;_handler[pin];</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;            }</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160; </div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;<span class="comment">            /**</span></div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;<span class="comment">             * Get pointer static ISR method by pin number</span></div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;<span class="comment">             *</span></div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;<span class="comment">             * \todo Make a vector</span></div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;<span class="comment">             *</span></div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;<span class="comment">             * \param[in] pin Pin number, top less than \ref CIRQMONITORED_MAX</span></div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;<span class="comment">             * \return Function pointer to related ISR method</span></div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;<span class="comment">             */</span></div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;            <span class="keyword">static</span> tFp getISRPtr(uint32_t pin) {</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;                <span class="keywordflow">switch</span>(pin) {</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;                    CIRQMONITORED_PIN_ISR_CASE(1);</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;                    CIRQMONITORED_PIN_ISR_CASE(2);</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;                    CIRQMONITORED_PIN_ISR_CASE(3);</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;                    CIRQMONITORED_PIN_ISR_CASE(4);</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;                    CIRQMONITORED_PIN_ISR_CASE(5);</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;                    CIRQMONITORED_PIN_ISR_CASE(6);</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;                    CIRQMONITORED_PIN_ISR_CASE(7);</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;                    CIRQMONITORED_PIN_ISR_CASE(8);</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;                    CIRQMONITORED_PIN_ISR_CASE(9);</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;                    CIRQMONITORED_PIN_ISR_CASE(10);</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;                    CIRQMONITORED_PIN_ISR_CASE(11);</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;                    CIRQMONITORED_PIN_ISR_CASE(12);</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;                    CIRQMONITORED_PIN_ISR_CASE(13);</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;                    CIRQMONITORED_PIN_ISR_CASE(14);</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;                    CIRQMONITORED_PIN_ISR_CASE(15);</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;                    CIRQMONITORED_PIN_ISR_CASE(16);</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;                    CIRQMONITORED_PIN_ISR_CASE(17);</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;                    CIRQMONITORED_PIN_ISR_CASE(18);</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;                    CIRQMONITORED_PIN_ISR_CASE(19);</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;                    CIRQMONITORED_PIN_ISR_CASE(20);</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;                    CIRQMONITORED_PIN_ISR_CASE(21);</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;                    CIRQMONITORED_PIN_ISR_CASE(22);</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;                    CIRQMONITORED_PIN_ISR_CASE(23);</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;                } <span class="comment">// switch(pin)</span></div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160; </div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;                <span class="keywordflow">return</span> &amp;pinISR0;</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;            } <span class="comment">// getISRPtr(...)</span><span class="comment"></span></div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;<span class="comment">/*! \endcond */</span></div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160; </div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;    }; <span class="comment">// class cIrqMonitor</span></div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160; </div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;} <span class="comment">// namespace nSupport</span></div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160; </div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;<span class="preprocessor">#endif // support_h</span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="asupport_8h_htm_aa8f95fd30f8eb0766ff16e66d11b1a87"><div class="ttname"><a href="support_8h.htm#aa8f95fd30f8eb0766ff16e66d11b1a87">CIRQMONITORED_MAX</a></div><div class="ttdeci">#define CIRQMONITORED_MAX</div><div class="ttdoc">Maximum I/O pins covered by class.</div><div class="ttdef"><b>Definition:</b> support.h:30</div></div>
<div class="ttc" id="aclassn_support_1_1c_irq_monitor_htm_a19afc06894ec78d4a4a52bdbfde18c35"><div class="ttname"><a href="classn_support_1_1c_irq_monitor.htm#a19afc06894ec78d4a4a52bdbfde18c35">nSupport::cIrqMonitor::isAttached</a></div><div class="ttdeci">static bool isAttached(const uint32_t pin)</div><div class="ttdoc">Query is an ISR attached by pin number.</div><div class="ttdef"><b>Definition:</b> support.h:136</div></div>
<div class="ttc" id="aclassn_support_1_1c_irq_monitor_htm_ad6dad4a759bf700878efc76bd848902c"><div class="ttname"><a href="classn_support_1_1c_irq_monitor.htm#ad6dad4a759bf700878efc76bd848902c">nSupport::cIrqMonitor::attach</a></div><div class="ttdeci">static bool attach(const uint32_t pin, cIrqHandler &amp;handler, const ePINMODE mode)</div><div class="ttdoc">Attach ISR to IRQ by pin number.</div><div class="ttdef"><b>Definition:</b> support.h:89</div></div>
<div class="ttc" id="apattern_8h_htm"><div class="ttname"><a href="pattern_8h.htm">pattern.h</a></div></div>
<div class="ttc" id="aclassn_support_1_1c_irq_monitor_htm_a190be4d44a6335f2a0a000b7c2d5b694"><div class="ttname"><a href="classn_support_1_1c_irq_monitor.htm#a190be4d44a6335f2a0a000b7c2d5b694">nSupport::cIrqMonitor::testISR</a></div><div class="ttdeci">static void testISR(const uint32_t pin)</div><div class="ttdoc">Invoke ISR by pin if attached.</div><div class="ttdef"><b>Definition:</b> support.h:155</div></div>
<div class="ttc" id="aclassn_support_1_1c_irq_monitor_htm"><div class="ttname"><a href="classn_support_1_1c_irq_monitor.htm">nSupport::cIrqMonitor</a></div><div class="ttdoc">A class offering IRQ monitoring services that do not require C style callbacks.</div><div class="ttdef"><b>Definition:</b> support.h:67</div></div>
<div class="ttc" id="aclassn_support_1_1c_irq_monitor_htm_a1ce38b9df13bba6d20af9d8cca30132d"><div class="ttname"><a href="classn_support_1_1c_irq_monitor.htm#a1ce38b9df13bba6d20af9d8cca30132d">nSupport::cIrqMonitor::ePINMODE</a></div><div class="ttdeci">ePINMODE</div><div class="ttdoc">Enum of possible pin change modes which are state or transitions.</div><div class="ttdef"><b>Definition:</b> support.h:72</div></div>
<div class="ttc" id="aclassn_support_1_1c_irq_handler_htm"><div class="ttname"><a href="classn_support_1_1c_irq_handler.htm">nSupport::cIrqHandler</a></div><div class="ttdoc">IRQ handler abstract class with user defined ISR method.</div><div class="ttdef"><b>Definition:</b> support.h:18</div></div>
<div class="ttc" id="aclassn_support_1_1c_irq_monitor_htm_a8a4c78033b78a886f43ec76aee2ec62b"><div class="ttname"><a href="classn_support_1_1c_irq_monitor.htm#a8a4c78033b78a886f43ec76aee2ec62b">nSupport::cIrqMonitor::deattach</a></div><div class="ttdeci">static bool deattach(const uint32_t pin)</div><div class="ttdoc">Deattach ISR by pin number.</div><div class="ttdef"><b>Definition:</b> support.h:113</div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="support_8h.htm">support.h</a></li>
    <li class="footer">Generated on Mon Jan 1 2024 17:03:14 for ArduinoFRTOSGCPP by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
