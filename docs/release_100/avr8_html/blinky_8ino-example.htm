<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArduinoFRTOSGCPP: blinky.ino</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(function() { init_search(); });
/* @license-end */
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="doxygenstyle.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">ArduinoFRTOSGCPP
   &#160;<span id="projectnumber">d91a63f (git)</span>
   </div>
   <div id="projectbrief">Library for accessing flash with ware levelling, supporting Arduino and OpenSTM32 (GPL).</div>
  </td>
   <td>        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
</td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('blinky_8ino-example.htm',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">blinky.ino</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><span class="comment">/**</span></div>
<div class="line"><span class="comment"> * Example use of FRTOSGCPP library - Simple blinky LED</span></div>
<div class="line"><span class="comment"> *</span></div>
<div class="line"><span class="comment"> * Architecture support:</span></div>
<div class="line"><span class="comment"> *  AVR8 (Uno/Nano)</span></div>
<div class="line"><span class="comment"> *  AT91 (Due)</span></div>
<div class="line"><span class="comment"> *  STM32 (F103.  Blue pill/Maple mini)</span></div>
<div class="line"><span class="comment"> *</span></div>
<div class="line"><span class="comment"> * DG, 2019</span></div>
<div class="line"><span class="comment"> */</span></div>
<div class="line"> </div>
<div class="line"><span class="comment">// Include FRTOS</span></div>
<div class="line"><span class="preprocessor">#if defined(ARDUINO_SAM_DUE)</span></div>
<div class="line"><span class="comment">// Due FRTOS (ARM7)</span></div>
<div class="line"><span class="preprocessor">#include &lt;FreeRTOS_ARM.h&gt;</span></div>
<div class="line"> </div>
<div class="line"><span class="comment">// Macro to include Ardunio Due FRTOS specifics</span></div>
<div class="line"><span class="comment">//#define FRTOS_SAM_CONTROL</span></div>
<div class="line"> </div>
<div class="line"><span class="preprocessor">#elif defined(ARDUINO_ARCH_STM32)</span></div>
<div class="line"> </div>
<div class="line"><span class="comment">// Maple Mini FRTOS (Cortex M3)</span></div>
<div class="line"><span class="preprocessor">#include &lt;MapleFreeRTOS900.h&gt;</span></div>
<div class="line"> </div>
<div class="line"><span class="preprocessor">#elif defined(ARDUINO_ARCH_AVR)</span></div>
<div class="line"> </div>
<div class="line"><span class="comment">// AVR8 (UNO/Nano etc.)</span></div>
<div class="line"><span class="preprocessor">#include &lt;FreeRTOS_AVR.h&gt;</span></div>
<div class="line"> </div>
<div class="line"><span class="preprocessor">#else</span></div>
<div class="line"><span class="preprocessor">#error Unsupported core</span></div>
<div class="line"><span class="preprocessor">#endif</span></div>
<div class="line"> </div>
<div class="line"> </div>
<div class="line"><span class="comment">// Include FRTOSGCPP headers after FRTOS includes...</span></div>
<div class="line"><span class="preprocessor">#include &lt;<a class="code" href="frtosgcpp_8h.htm">frtosgcpp.h</a>&gt;</span></div>
<div class="line"> </div>
<div class="line"> </div>
<div class="line"><span class="comment">/*</span></div>
<div class="line"><span class="comment"> * A class representing a simple operational flashing LED</span></div>
<div class="line"><span class="comment"> *</span></div>
<div class="line"><span class="comment"> * \tparam pinN Pin number of LED output</span></div>
<div class="line"><span class="comment"> */</span></div>
<div class="line"><span class="keyword">template</span> &lt;u<span class="keywordtype">int</span>32_t pinN&gt;</div>
<div class="line"><span class="keyword">class </span>cLED : <span class="keyword">public</span> <a name="_a0"></a><a class="code" href="classn_f_r_t_o_s_1_1c_task.htm">nFRTOS::cTask</a> {</div>
<div class="line"> </div>
<div class="line">    <span class="keyword">public</span>:</div>
<div class="line">        <span class="comment">/*</span></div>
<div class="line"><span class="comment">         * Make stable instance</span></div>
<div class="line"><span class="comment">         *</span></div>
<div class="line"><span class="comment">         * \param ulLowTimeout timeout period for LOW pin state.  Default 500 ticks</span></div>
<div class="line"><span class="comment">         * \param ulHighTimeout timeout period for HIGH pin state.  Default 500 ticks</span></div>
<div class="line"><span class="comment">         */</span></div>
<div class="line">        cLED(uint32_t ulLowTimeout = pdMS_TO_TICKS(500), uint32_t ulHighTimeout = pdMS_TO_TICKS(500)) : _ulTimeout { ulLowTimeout, ulHighTimeout } {</div>
<div class="line">        }</div>
<div class="line"> </div>
<div class="line">        <span class="comment">/*</span></div>
<div class="line"><span class="comment">         * Create task and start it</span></div>
<div class="line"><span class="comment">         *</span></div>
<div class="line"><span class="comment">         * \param[in] ulPriority Task priority level.  Default tskIDLE_PRIORITY + 1</span></div>
<div class="line"><span class="comment">         * \param[in] ulStackSize Stack size in Bytes, default configMINIMAL_STACK_SIZE</span></div>
<div class="line"><span class="comment">         * \return Creation State</span></div>
<div class="line"><span class="comment">         */</span></div>
<div class="line">        <span class="keywordtype">bool</span> <a name="a1"></a><a class="code" href="classn_f_r_t_o_s_1_1c_task.htm#a773e388a901e20cb124e894dab28aba9">join</a>(<span class="keyword">const</span> UBaseType_t ulPriority = tskIDLE_PRIORITY + 1, <span class="keyword">const</span> uint32_t ulStackSize=configMINIMAL_STACK_SIZE) {</div>
<div class="line">            <a name="a2"></a><a class="code" href="classn_f_r_t_o_s_1_1c_task.htm#a402ca47e8e43b64e6157a17cd81d9ff5">start</a>(NULL, ulPriority, ulStackSize);</div>
<div class="line"> </div>
<div class="line">            <span class="keywordflow">return</span> <a name="a3"></a><a class="code" href="classn_f_r_t_o_s_1_1c_task.htm#a4e91aca895cfbabf02d106294c8cc8ce">isValidHandle</a>();</div>
<div class="line">        }</div>
<div class="line"> </div>
<div class="line">    <span class="keyword">protected</span>:</div>
<div class="line">        <span class="comment">/*</span></div>
<div class="line"><span class="comment">         * Task/thread run handler method, invoked by FRTOS, endless loop</span></div>
<div class="line"><span class="comment">         */</span></div>
<div class="line">        <span class="keywordtype">void</span> <a name="a4"></a><a class="code" href="classn_f_r_t_o_s_1_1c_task.htm#a80ef40a1ef27e6fdd396c87834c55f9d">run</a>() {</div>
<div class="line">            <span class="keywordflow">for</span> (;;) {</div>
<div class="line">                digitalWrite(pinN, LOW);</div>
<div class="line">                vTaskDelay(_ulTimeout[0]);</div>
<div class="line">                digitalWrite(pinN, HIGH);</div>
<div class="line">                vTaskDelay(_ulTimeout[1]);</div>
<div class="line">            }</div>
<div class="line">        }</div>
<div class="line"> </div>
<div class="line">    <span class="keyword">private</span>:</div>
<div class="line">        uint32_t    _ulTimeout[2];    <span class="comment">/// Timeouts for low/high LED states</span></div>
<div class="line"><span class="comment"></span>};</div>
<div class="line"> </div>
<div class="line"> </div>
<div class="line"><span class="comment">// Assume STM32 is Maple Mini (sorry Blue pill)</span></div>
<div class="line"><span class="preprocessor">#if defined(ARDUINO_ARCH_STM32)</span></div>
<div class="line"> </div>
<div class="line"><span class="preprocessor">#define MY_BOARD_LED    33</span></div>
<div class="line"> </div>
<div class="line"><span class="preprocessor">#else</span></div>
<div class="line"> </div>
<div class="line"><span class="comment">// If your board isnt the default pin13, change...</span></div>
<div class="line"><span class="preprocessor">#define MY_BOARD_LED    13</span></div>
<div class="line"> </div>
<div class="line"><span class="preprocessor">#endif</span></div>
<div class="line"> </div>
<div class="line">cLED&lt;MY_BOARD_LED&gt;    xBoardLED( pdMS_TO_TICKS(500), pdMS_TO_TICKS(250) );</div>
<div class="line"> </div>
<div class="line"><span class="keywordtype">void</span> setup() {</div>
<div class="line">    <span class="comment">// Arduino hardware serial setup</span></div>
<div class="line">    Serial.begin(115200);</div>
<div class="line">    Serial.println(<span class="stringliteral">&quot;Started&quot;</span>);</div>
<div class="line"> </div>
<div class="line">    xBoardLED.join();</div>
<div class="line"> </div>
<div class="line">    <span class="comment">// Start pre-emption (if all ok we block here)</span></div>
<div class="line">    vTaskStartScheduler();</div>
<div class="line">}</div>
<div class="line"> </div>
<div class="line"><span class="keywordtype">void</span> loop() {</div>
<div class="line">  <span class="comment">// We should never get here, will if tasking fault</span></div>
<div class="line">}</div>
</div><!-- fragment --> </div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="aclassn_f_r_t_o_s_1_1c_task_htm_a773e388a901e20cb124e894dab28aba9"><div class="ttname"><a href="classn_f_r_t_o_s_1_1c_task.htm#a773e388a901e20cb124e894dab28aba9">nFRTOS::cTask::join</a></div><div class="ttdeci">virtual bool join(const UBaseType_t ulPriority=tskIDLE_PRIORITY+1, const uint32_t ulStackSize=configMINIMAL_STACK_SIZE)=0</div><div class="ttdoc">Create task and start running via start.</div></div>
<div class="ttc" id="aclassn_f_r_t_o_s_1_1c_task_htm_a4e91aca895cfbabf02d106294c8cc8ce"><div class="ttname"><a href="classn_f_r_t_o_s_1_1c_task.htm#a4e91aca895cfbabf02d106294c8cc8ce">nFRTOS::cTask::isValidHandle</a></div><div class="ttdeci">bool isValidHandle() const</div><div class="ttdoc">Test FRTOS task handle.</div><div class="ttdef"><b>Definition:</b> frtos.h:42</div></div>
<div class="ttc" id="afrtosgcpp_8h_htm"><div class="ttname"><a href="frtosgcpp_8h.htm">frtosgcpp.h</a></div></div>
<div class="ttc" id="aclassn_f_r_t_o_s_1_1c_task_htm"><div class="ttname"><a href="classn_f_r_t_o_s_1_1c_task.htm">nFRTOS::cTask</a></div><div class="ttdoc">An abstract class wrapping a single FRTOS task.</div><div class="ttdef"><b>Definition:</b> frtos.h:19</div></div>
<div class="ttc" id="aclassn_f_r_t_o_s_1_1c_task_htm_a402ca47e8e43b64e6157a17cd81d9ff5"><div class="ttname"><a href="classn_f_r_t_o_s_1_1c_task.htm#a402ca47e8e43b64e6157a17cd81d9ff5">nFRTOS::cTask::start</a></div><div class="ttdeci">void start(const char *pcTaskName, const UBaseType_t ulPriority, const uint32_t ulStackSize=configMINIMAL_STACK_SIZE)</div><div class="ttdoc">Create task and start running.</div><div class="ttdef"><b>Definition:</b> frtos.h:125</div></div>
<div class="ttc" id="aclassn_f_r_t_o_s_1_1c_task_htm_a80ef40a1ef27e6fdd396c87834c55f9d"><div class="ttname"><a href="classn_f_r_t_o_s_1_1c_task.htm#a80ef40a1ef27e6fdd396c87834c55f9d">nFRTOS::cTask::run</a></div><div class="ttdeci">virtual void run()=0</div><div class="ttdoc">Task main loop, implementation should be a non-returning endless loop in most cases.</div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="footer">Generated on Mon Jan 1 2024 17:03:14 for ArduinoFRTOSGCPP by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
